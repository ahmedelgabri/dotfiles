#!/usr/bin/env bash

set -Eueo pipefail

ARCH="$(arch)"

# =======================================================================
# = Helpers & setting some variables
# =======================================================================

DOTFILES_DIR="$HOME/.dotfiles"

tput sgr0
RED=$(tput setaf 1)
ORANGE=$(tput setaf 3)
GREEN=$(tput setaf 2)
# shellcheck disable=SC2034
PURPLE=$(tput setaf 5)
# shellcheck disable=SC2034
CYAN=$(tput setaf 4)
BLUE=$(tput setaf 6)
# shellcheck disable=SC2034
WHITE=$(tput setaf 7)
# shellcheck disable=SC2034
BOLD=$(tput bold)
RESET=$(tput sgr0)

log() {
	local LABEL="[$1]"
	local COLOR="$2"
	shift
	shift
	local MSG=("$@")
	printf "${COLOR}${LABEL}%*s${RESET}" $(($(tput cols) - ${#LABEL})) | tr ' ' '='
	for M in "${MSG[@]}"; do
		# shellcheck disable=SC2219
		let COL=$(tput cols)-2-${#M}
		printf "%s%${COL}s${RESET}" "$COLOR* $M"
	done
	printf "${COLOR}%*s${RESET}\n\n\n" "$(tput cols)" | tr ' ' '='
}

log_error() {
	log "FAIL" "$RED" "$@"
	exit 1
}

log_info() {
	log "INFO" "$ORANGE" "$@"
}

log_success() {
	log "OK" "$GREEN" "$@"
}

print_main_banner() {
	cd "$HOME"
	command cat <<EOF
$GREEN
                            _       _    __ _ _
                           | |     | |  / _(_) |
                         __| | ___ | |_| |_ _| | ___  ___
                        / _. |/ _ \| __|  _| | |/ _ \/ __|
                       | (_| | (_) | |_| | | | |  __/\__ \ $()
                      (_)__,_|\___/ \__|_| |_|_|\___||___/


                          bootstrapping an $ARCH machine

$RESET
EOF

	if [ -d "$DOTFILES_DIR/.git" ]; then
		command cat <<EOF
$BLUE
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'%C(yellow)commit:  %h')
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'%C(red)date:    %ad' --date=short)
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'%C(cyan)author:  %an')
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'%C(green)message: %s')
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$RESET
EOF
	fi
}

clone_dotfiles() {
	if [[ ! -d $DOTFILES_DIR ]]; then
		log_success "Cloning dotfiles..."
		git clone --recursive https://github.com/ahmedelgabri/dotfiles.git "$DOTFILES_DIR"

		# Setup repo origin & mirrors
		cd "$DOTFILES_DIR" &&
			git remote set-url origin git@github.com:ahmedelgabri/dotfiles.git &&
			git remote add --mirror=push bitbucket git@bitbucket.org:ahmedelgabri/dotfiles.git &&
			git remote add --mirror=push gitlab git@gitlab.com:ahmedelgabri/dotfiles.git

	else
		cd "$DOTFILES_DIR"
		git stash -u || true
		git checkout main
		git reset --hard origin/main
		git submodule update --init --recursive || true
		git checkout -
		git stash pop || true
	fi
}
