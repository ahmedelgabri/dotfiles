#!/usr/bin/env bash

# Flakify the current directory

# Check if Nix command exists
if ! command -v nix &>/dev/null; then
	echo "Error: nix command not found. Please install Nix."
	exit 1
fi

if [ ! -e ./flake.nix ]; then
	echo "Creating flake.nix using nix-direnv template..."
	# This template contains .envrc file already
	nix flake new -t github:nix-community/nix-direnv .

	# Check if .envrc was created by the template
	if [ -e ./.envrc ]; then
		echo "Updating .envrc..."
		# Prepend standard lines and append dotenv_if_exists
		# Use a temporary file to avoid issues with reading and writing the same file
		tmp_envrc=$(mktemp)
		printf '%s\n' "set -e" "set +u" >"$tmp_envrc"
		cat .envrc >>"$tmp_envrc"
		printf '\n%s\n' "dotenv_if_exists" >>"$tmp_envrc"
		mv "$tmp_envrc" .envrc

		# Check if direnv command exists before running
		if command -v direnv &>/dev/null; then
			direnv allow
		else
			echo "Warning: direnv command not found. Please run 'direnv allow' manually."
		fi
	else
		echo "Warning: nix flake template did not create .envrc as expected."
	fi
else
	echo "flake.nix already exists."
fi

# Open flake.nix and .envrc in editor
# Use ${EDITOR:-vim} for safety if EDITOR is unset
editor_cmd="${EDITOR:-vim}"
echo "Opening flake.nix and .envrc in $editor_cmd..."
if [ -e ./flake.nix ] && [ -e ./.envrc ]; then
	"$editor_cmd" flake.nix .envrc
elif [ -e ./flake.nix ]; then
	"$editor_cmd" flake.nix
elif [ -e ./.envrc ]; then
	"$editor_cmd" .envrc
else
	echo "Neither flake.nix nor .envrc found to edit."
fi
